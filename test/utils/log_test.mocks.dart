// Mocks generated by Mockito 5.0.17 from annotations
// in lib_omemo_encrypt/test/utils/log_test.dart.
// Do not manually edit this file.

import 'package:lib_omemo_encrypt/utils/log.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [Log].
///
/// See the documentation for Mockito's code generation for more information.
class MockLog extends _i1.Mock implements _i2.Log {
  MockLog() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.LogLevel get logLevel => (super.noSuchMethod(Invocation.getter(#logLevel),
      returnValue: _i2.LogLevel.VERBOSE) as _i2.LogLevel);
  @override
  set logLevel(_i2.LogLevel? _logLevel) =>
      super.noSuchMethod(Invocation.setter(#logLevel, _logLevel),
          returnValueForMissingStub: null);
  @override
  void v(String? tag, String? message) =>
      super.noSuchMethod(Invocation.method(#v, [tag, message]),
          returnValueForMissingStub: null);
  @override
  void d(String? tag, dynamic message) =>
      super.noSuchMethod(Invocation.method(#d, [tag, message]),
          returnValueForMissingStub: null);
  @override
  void i(String? tag, dynamic message) =>
      super.noSuchMethod(Invocation.method(#i, [tag, message]),
          returnValueForMissingStub: null);
  @override
  void w(String? tag, dynamic message) =>
      super.noSuchMethod(Invocation.method(#w, [tag, message]),
          returnValueForMissingStub: null);
  @override
  void e(String? tag, dynamic message) =>
      super.noSuchMethod(Invocation.method(#e, [tag, message]),
          returnValueForMissingStub: null);
}
